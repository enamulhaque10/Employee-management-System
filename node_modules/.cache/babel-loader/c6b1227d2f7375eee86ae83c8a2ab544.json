{"ast":null,"code":"var _jsxFileName = \"/home/shawon/Music/Employee-management-System/src/views/Employee/EmployeeList.js\",\n    _s = $RefreshSig$();\n\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from \"@themesberg/react-bootstrap\";\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport ProgressBar from \"react-topbar-progress-indicator\";\nimport { DefaultCard } from \"../../components/card\";\nimport { BasicTable, BasicTableAction } from \"../../components/table\";\nimport useListApi from \"../../hooks/useListApi\";\nimport { callApi } from \"../../reducers/apiSlice\";\nimport { setDeleteModal } from \"../../reducers/deleteModalSlice\";\nimport { selectToastAlert } from \"../../reducers/toastAlertSlice\";\nimport './Employee.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EmployeeList = () => {\n  _s();\n\n  /**\n   * useHistory: navigation helper\n   */\n  const history = useHistory();\n  /**\n   * useDispatch: dispatch actions\n   */\n\n  const dispatch = useDispatch();\n  /**\n   * Put page and size into state\n   */\n\n  const [size, setSize] = useState(10);\n  const [page, setPage] = useState(1);\n  /**\n   * Get updated 'type' value from toast alert's state.\n   */\n\n  const {\n    type\n  } = useSelector(selectToastAlert);\n  /**\n   * cardProps must need to pass into DefaultCard component.\n   * headerSlot: this is a placeholder for action buttons on card header.\n   *\n   * @type {{headerSlot: (function(): *), title: string}}\n   */\n\n  const cardProps = {\n    title: 'Employee List',\n    headerSlot: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/employee/add\",\n        activeClassName: \"active\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          className: \"f-right btn-sm p-5\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus,\n            className: \"me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this), \" Add New Employee\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)\n    }, void 0, false)\n  };\n  /**\n   * tableProps must need to pass into BasicTable component.\n   * headers: used for showing table header dynamically.\n   * perPage: used for controlling page size.\n   * config: used for api call.\n   * meta: contains pagination related data. [initially empty]\n   *\n   * @type {{headers: *[], perPage: number[], meta: {}, config: {output: string, operationId: string}}}\n   */\n\n  const tableProps = {\n    headers: [{\n      id: 'id',\n      label: '#'\n    }, {\n      id: 'employeeName',\n      label: 'Employee Name'\n    }, {\n      id: 'employeeAge',\n      label: 'Employee Age'\n    }, {\n      id: 'employeeSalary',\n      label: 'Employee Salary'\n    }, {\n      id: 'action',\n      label: 'Action',\n      width: '120px'\n    }],\n    perPage: [10, 20, 30, 40, 50],\n    config: {\n      operationId: `https://dummy.restapiexample.com/api/v1/employees`,\n      output: 'employee'\n    },\n    meta: {}\n  };\n  /**\n   * useListApi: get data for displaying on the table\n   */\n\n  const {\n    loading,\n    data,\n    meta\n  } = useListApi(tableProps.config);\n  /**\n   * Update tableProps's meta from api response\n   */\n\n  tableProps.meta = meta;\n  /**\n   * Show delete modal and performing delete operation\n   * by dispatching setDeleteModal. 'deleteApi' must need be passed.\n   */\n\n  const onDeleteClick = data => {\n    dispatch(setDeleteModal({\n      deleteApi: `country/delete/${data.id}`\n    }));\n  };\n  /**\n   * Change the page on table and update the state.\n   * Fetch data by dispatching callApi.\n   */\n\n\n  const onPageChange = pageNo => {\n    setPage(pageNo);\n    dispatch(callApi({\n      operationId: `https://dummy.restapiexample.com/api/v1/employees`,\n      output: 'employee'\n    }));\n  };\n  /**\n   * Refresh the table data after performing delete operation.\n   * Fetch data by dispatching callApi.\n   */\n\n\n  useEffect(() => {\n    if (type === 'success') {\n      dispatch(callApi({\n        operationId: `https://dummy.restapiexample.com/api/v1/employees`,\n        output: 'employee'\n      }));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(DefaultCard, {\n    className: \"mb-50\",\n    ...cardProps,\n    children: [loading && /*#__PURE__*/_jsxDEV(ProgressBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(BasicTable, { ...tableProps,\n      children: data !== undefined && data.map((row, rowIndex) => {\n        var _row$employee_age, _row$employee_salary;\n\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fw-normal\",\n              children: row.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fw-normal\",\n              children: row.employee_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fw-normal\",\n              children: (_row$employee_age = row.employee_age) !== null && _row$employee_age !== void 0 ? _row$employee_age : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fw-normal\",\n              children: (_row$employee_salary = row.employee_salary) !== null && _row$employee_salary !== void 0 ? _row$employee_salary : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(BasicTableAction, {\n              onShowClick: () => history.push(`/country/${row.id}`),\n              onEditClick: () => history.push(`/country/${row.id}/edit`),\n              onDeleteClick: () => onDeleteClick(row)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 7\n          }, this)]\n        }, rowIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 6\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 3\n  }, this);\n};\n\n_s(EmployeeList, \"RQUGU35VNg7rOxTbkAsUSxg/a3o=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useListApi];\n});\n\n_c = EmployeeList;\nexport default EmployeeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"sources":["/home/shawon/Music/Employee-management-System/src/views/Employee/EmployeeList.js"],"names":["faPlus","FontAwesomeIcon","Button","React","useEffect","useState","useDispatch","useSelector","Link","useHistory","ProgressBar","DefaultCard","BasicTable","BasicTableAction","useListApi","callApi","setDeleteModal","selectToastAlert","EmployeeList","history","dispatch","size","setSize","page","setPage","type","cardProps","title","headerSlot","tableProps","headers","id","label","width","perPage","config","operationId","output","meta","loading","data","onDeleteClick","deleteApi","onPageChange","pageNo","undefined","map","row","rowIndex","employee_name","employee_age","employee_salary","push"],"mappings":"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","sourcesContent":["import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from \"@themesberg/react-bootstrap\";\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport ProgressBar from \"react-topbar-progress-indicator\";\nimport { DefaultCard } from \"../../components/card\";\nimport { BasicTable, BasicTableAction } from \"../../components/table\";\nimport useListApi from \"../../hooks/useListApi\";\nimport { callApi } from \"../../reducers/apiSlice\";\nimport { setDeleteModal } from \"../../reducers/deleteModalSlice\";\nimport { selectToastAlert } from \"../../reducers/toastAlertSlice\";\n\nimport './Employee.scss';\n\nconst EmployeeList = () => {\n\n\t/**\n\t * useHistory: navigation helper\n\t */\n\tconst history = useHistory();\n\n\t/**\n\t * useDispatch: dispatch actions\n\t */\n\tconst dispatch = useDispatch();\n\n\t/**\n\t * Put page and size into state\n\t */\n\tconst [size, setSize] = useState(10);\n\tconst [page, setPage] = useState(1);\n\n\t/**\n\t * Get updated 'type' value from toast alert's state.\n\t */\n\tconst {type} = useSelector(selectToastAlert);\n\n\t/**\n\t * cardProps must need to pass into DefaultCard component.\n\t * headerSlot: this is a placeholder for action buttons on card header.\n\t *\n\t * @type {{headerSlot: (function(): *), title: string}}\n\t */\n\tconst cardProps = {\n\t\ttitle: 'Employee List',\n\t\theaderSlot: () => (\n\t\t\t<>\n\t\t\t\t<Link to='/employee/add' activeClassName=\"active\">\n\t\t\t\t\t<Button variant=\"link\" className=\"f-right btn-sm p-5\">\n\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} className=\"me-2\"/> Add New Employee\n\t\t\t\t\t</Button>\n\t\t\t\t</Link>\n\t\t\t</>\n\t\t)\n\t};\n\n\t/**\n\t * tableProps must need to pass into BasicTable component.\n\t * headers: used for showing table header dynamically.\n\t * perPage: used for controlling page size.\n\t * config: used for api call.\n\t * meta: contains pagination related data. [initially empty]\n\t *\n\t * @type {{headers: *[], perPage: number[], meta: {}, config: {output: string, operationId: string}}}\n\t */\n\tconst tableProps = {\n\t\theaders: [\n\t\t\t{id: 'id', label: '#'},\n\t\t\t{id: 'employeeName', label: 'Employee Name'},\n\t\t\t{id: 'employeeAge', label: 'Employee Age'},\n\t\t\t{id: 'employeeSalary', label: 'Employee Salary'},\n\n\t\t\t{id: 'action', label: 'Action', width: '120px'}\n\t\t],\n\t\tperPage: [10, 20, 30, 40, 50],\n\t\tconfig: {\n\t\t\toperationId: `https://dummy.restapiexample.com/api/v1/employees`,\n\t\t\toutput: 'employee'\n\t\t},\n\t\tmeta: {}\n\t};\n\n\t/**\n\t * useListApi: get data for displaying on the table\n\t */\n\tconst {\n\t\tloading,\n\t\tdata,\n\t\tmeta\n\t} = useListApi(tableProps.config);\n\n\t/**\n\t * Update tableProps's meta from api response\n\t */\n\ttableProps.meta = meta;\n\n\t/**\n\t * Show delete modal and performing delete operation\n\t * by dispatching setDeleteModal. 'deleteApi' must need be passed.\n\t */\n\tconst onDeleteClick = (data) => {\n\t\tdispatch(setDeleteModal({\n\t\t\tdeleteApi: `country/delete/${data.id}`\n\t\t}));\n\t};\n\n\t/**\n\t * Change the page on table and update the state.\n\t * Fetch data by dispatching callApi.\n\t */\n\tconst onPageChange = (pageNo) => {\n\t\tsetPage(pageNo);\n\t\tdispatch(callApi({\n\t\t\toperationId: `https://dummy.restapiexample.com/api/v1/employees`,\n\t\t\toutput: 'employee'\n\t\t}));\n\t};\n\n\n\t/**\n\t * Refresh the table data after performing delete operation.\n\t * Fetch data by dispatching callApi.\n\t */\n\tuseEffect(() => {\n\t\tif (type === 'success') {\n\t\t\tdispatch(callApi({\n\t\t\t\toperationId: `https://dummy.restapiexample.com/api/v1/employees`,\n\t\t\t\toutput: 'employee'\n\t\t\t}));\n\t\t}\n\t});\n\n\treturn (\n\t\t<DefaultCard className=\"mb-50\" {...cardProps}>\n\t\t\t{loading &&\n\t\t\t<ProgressBar/>\n\t\t\t}\n\t\t\t<BasicTable {...tableProps}\n\t\t\t            // onSizeChange={(pageSize) => onSizeChange(pageSize)}\n\t\t\t            // onSearchChange={(query) => onSearchChange(query)}\n\t\t\t            // onPageChange={(pageNo) => onPageChange(pageNo)}\n\t\t\t>\n\t\t\t\t{data !== undefined &&\n\t\t\t\tdata.map((row, rowIndex) => (\n\t\t\t\t\t<tr key={rowIndex}>\n\t\t\t\t\t\t<td>\n                <span className=\"fw-normal\">\n                  {row.id}\n                </span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n                <span className=\"fw-normal\">\n                  {row.employee_name}\n                </span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<td>\n                <span className=\"fw-normal\">\n                  {row.employee_age ?? 'N/A'}\n                </span>\n\t\t\t\t\t\t</td>\n\n\t\t\t\t\t\t<td>\n                <span className=\"fw-normal\">\n                  {row.employee_salary ?? 'N/A'}\n                </span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<BasicTableAction\n\t\t\t\t\t\t\t\tonShowClick={() => history.push(`/country/${row.id}`)}\n\t\t\t\t\t\t\t\tonEditClick={() => history.push(`/country/${row.id}/edit`)}\n\t\t\t\t\t\t\t\tonDeleteClick={() => onDeleteClick(row)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t))\n\t\t\t\t}\n\t\t\t</BasicTable>\n\t\t</DefaultCard>\n\t)\n\n};\n\nexport default EmployeeList;"]},"metadata":{},"sourceType":"module"}