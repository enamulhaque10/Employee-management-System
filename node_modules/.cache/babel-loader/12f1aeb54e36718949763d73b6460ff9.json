{"ast":null,"code":"var _jsxFileName = \"/home/shawon/frontend-template/src/views/country/CountryList.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button } from \"@themesberg/react-bootstrap\";\nimport { DefaultCard } from \"../../components/card\";\nimport { BasicTable, BasicTableAction } from \"../../components/table\";\nimport { setDeleteModal } from \"../../reducers/deleteModalSlice\";\nimport useListApi from \"../../hooks/useListApi\";\nimport { callApi } from \"../../reducers/apiSlice\";\nimport { selectToastAlert } from \"../../reducers/toastAlertSlice\";\nimport ProgressBar from \"react-topbar-progress-indicator\";\nimport './Country.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CountryList = () => {\n  _s();\n\n  /**\n   * useHistory: navigation helper\n   */\n  const history = useHistory();\n  /**\n   * useDispatch: dispatch actions\n   */\n\n  const dispatch = useDispatch();\n  /**\n   * Put page and size into state\n   */\n\n  const [size, setSize] = useState(10);\n  const [page, setPage] = useState(1);\n  /**\n   * Get updated 'type' value from toast alert's state.\n   */\n\n  const {\n    type\n  } = useSelector(selectToastAlert);\n  /**\n   * cardProps must need to pass into DefaultCard component.\n   * headerSlot: this is a placeholder for action buttons on card header.\n   *\n   * @type {{headerSlot: (function(): *), title: string}}\n   */\n\n  const cardProps = {\n    title: 'Country List',\n    headerSlot: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/country/add\",\n        activeClassName: \"active\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          className: \"f-right btn-sm p-5\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus,\n            className: \"me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this), \" Add New Country\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)\n    }, void 0, false)\n  };\n  /**\n   * tableProps must need to pass into BasicTable component.\n   * headers: used for showing table header dynamically.\n   * perPage: used for controlling page size.\n   * config: used for api call.\n   * meta: contains pagination related data. [initially empty]\n   *\n   * @type {{headers: *[], perPage: number[], meta: {}, config: {output: string, operationId: string}}}\n   */\n\n  const tableProps = {\n    headers: [{\n      id: 'id',\n      label: '#'\n    }, {\n      id: 'countryName',\n      label: 'Country Name'\n    }, {\n      id: 'countryNameBn',\n      label: 'Country Name (Bn)'\n    }, {\n      id: 'countryIdLegacy',\n      label: 'Country Id (Legacy)'\n    }, {\n      id: 'action',\n      label: 'Action',\n      width: '120px'\n    }],\n    perPage: [10, 20, 30, 40, 50],\n    config: {\n      operationId: `country/list?page=${page}&size=${size}`,\n      output: 'country'\n    },\n    meta: {}\n  };\n  /**\n   * useListApi: get data for displaying on the table\n   */\n\n  const {\n    loading,\n    data,\n    meta\n  } = useListApi(tableProps.config);\n  /**\n   * Update tableProps's meta from api response\n   */\n\n  tableProps.meta = meta;\n  /**\n   * Show delete modal and performing delete operation\n   * by dispatching setDeleteModal. 'deleteApi' must need be passed.\n   */\n\n  const onDeleteClick = data => {\n    dispatch(setDeleteModal({\n      deleteApi: `country/delete/${data.id}`\n    }));\n  };\n  /**\n   * Change the page on table and update the state.\n   * Fetch data by dispatching callApi.\n   */\n\n\n  const onPageChange = pageNo => {\n    setPage(pageNo);\n    dispatch(callApi({\n      operationId: `country/list?page=${page}&size=${size}`,\n      output: 'country'\n    }));\n  };\n  /**\n   * Change the page size on table and update the state.\n   * Fetch data by dispatching callApi.\n   */\n\n\n  const onSizeChange = pageSize => {\n    setSize(pageSize);\n    dispatch(callApi({\n      operationId: `country/list?page=${page}&size=${size}`,\n      output: 'country'\n    }));\n  };\n  /**\n   * Receive the value from search box and update the state.\n   * Fetch data by dispatching callApi.\n   */\n\n\n  const onSearchChange = query => {\n    dispatch(callApi({\n      operationId: `country/list?page=${page}&size=${size}&search=${query}`,\n      output: 'country'\n    }));\n  };\n  /**\n   * Refresh the table data after performing delete operation.\n   * Fetch data by dispatching callApi.\n   */\n\n\n  useEffect(() => {\n    if (type === 'success') {\n      dispatch(callApi({\n        operationId: `country/list?page=${page}&size=${size}`,\n        output: 'country'\n      }));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(DefaultCard, {\n    className: \"mb-50\",\n    ...cardProps,\n    children: [loading && /*#__PURE__*/_jsxDEV(ProgressBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(BasicTable, { ...tableProps,\n      onSizeChange: pageSize => onSizeChange(pageSize),\n      onSearchChange: query => onSearchChange(query),\n      onPageChange: pageNo => onPageChange(pageNo),\n      children: data !== undefined && data.map((row, rowIndex) => {\n        var _row$countryLegacyId;\n\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fw-normal\",\n              children: row.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fw-normal\",\n              children: row.countryName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fw-normal\",\n              children: row.countryNameBn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fw-normal\",\n              children: (_row$countryLegacyId = row.countryLegacyId) !== null && _row$countryLegacyId !== void 0 ? _row$countryLegacyId : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(BasicTableAction, {\n              onShowClick: () => history.push(`/country/${row.id}`),\n              onEditClick: () => history.push(`/country/${row.id}/edit`),\n              onDeleteClick: () => onDeleteClick(row)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 7\n          }, this)]\n        }, rowIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 6\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CountryList, \"RQUGU35VNg7rOxTbkAsUSxg/a3o=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useListApi];\n});\n\n_c = CountryList;\nexport default CountryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"sources":["/home/shawon/frontend-template/src/views/country/CountryList.js"],"names":["React","useEffect","useState","Link","useHistory","useDispatch","useSelector","FontAwesomeIcon","faPlus","Button","DefaultCard","BasicTable","BasicTableAction","setDeleteModal","useListApi","callApi","selectToastAlert","ProgressBar","CountryList","history","dispatch","size","setSize","page","setPage","type","cardProps","title","headerSlot","tableProps","headers","id","label","width","perPage","config","operationId","output","meta","loading","data","onDeleteClick","deleteApi","onPageChange","pageNo","onSizeChange","pageSize","onSearchChange","query","undefined","map","row","rowIndex","countryName","countryNameBn","countryLegacyId","push"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {useEffect, useState} from 'react';\nimport {Link, useHistory} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {Button} from \"@themesberg/react-bootstrap\";\nimport {DefaultCard} from \"../../components/card\";\nimport {BasicTable, BasicTableAction} from \"../../components/table\";\nimport {setDeleteModal} from \"../../reducers/deleteModalSlice\";\nimport useListApi from \"../../hooks/useListApi\";\nimport {callApi} from \"../../reducers/apiSlice\";\nimport {selectToastAlert} from \"../../reducers/toastAlertSlice\";\nimport ProgressBar from \"react-topbar-progress-indicator\";\n\nimport './Country.scss'\n\nconst CountryList = () => {\n\n\t/**\n\t * useHistory: navigation helper\n\t */\n\tconst history = useHistory();\n\n\t/**\n\t * useDispatch: dispatch actions\n\t */\n\tconst dispatch = useDispatch();\n\n\t/**\n\t * Put page and size into state\n\t */\n\tconst [size, setSize] = useState(10);\n\tconst [page, setPage] = useState(1);\n\n\t/**\n\t * Get updated 'type' value from toast alert's state.\n\t */\n\tconst {type} = useSelector(selectToastAlert);\n\n\t/**\n\t * cardProps must need to pass into DefaultCard component.\n\t * headerSlot: this is a placeholder for action buttons on card header.\n\t *\n\t * @type {{headerSlot: (function(): *), title: string}}\n\t */\n\tconst cardProps = {\n\t\ttitle: 'Country List',\n\t\theaderSlot: () => (\n\t\t\t<>\n\t\t\t\t<Link to='/country/add' activeClassName=\"active\">\n\t\t\t\t\t<Button variant=\"link\" className=\"f-right btn-sm p-5\">\n\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} className=\"me-2\"/> Add New Country\n\t\t\t\t\t</Button>\n\t\t\t\t</Link>\n\t\t\t</>\n\t\t)\n\t};\n\n\t/**\n\t * tableProps must need to pass into BasicTable component.\n\t * headers: used for showing table header dynamically.\n\t * perPage: used for controlling page size.\n\t * config: used for api call.\n\t * meta: contains pagination related data. [initially empty]\n\t *\n\t * @type {{headers: *[], perPage: number[], meta: {}, config: {output: string, operationId: string}}}\n\t */\n\tconst tableProps = {\n\t\theaders: [\n\t\t\t{id: 'id', label: '#'},\n\t\t\t{id: 'countryName', label: 'Country Name'},\n\t\t\t{id: 'countryNameBn', label: 'Country Name (Bn)'},\n\t\t\t{id: 'countryIdLegacy', label: 'Country Id (Legacy)'},\n\t\t\t{id: 'action', label: 'Action', width: '120px'}\n\t\t],\n\t\tperPage: [10, 20, 30, 40, 50],\n\t\tconfig: {\n\t\t\toperationId: `country/list?page=${page}&size=${size}`,\n\t\t\toutput: 'country'\n\t\t},\n\t\tmeta: {}\n\t};\n\n\t/**\n\t * useListApi: get data for displaying on the table\n\t */\n\tconst {\n\t\tloading,\n\t\tdata,\n\t\tmeta\n\t} = useListApi(tableProps.config);\n\n\t/**\n\t * Update tableProps's meta from api response\n\t */\n\ttableProps.meta = meta;\n\n\t/**\n\t * Show delete modal and performing delete operation\n\t * by dispatching setDeleteModal. 'deleteApi' must need be passed.\n\t */\n\tconst onDeleteClick = (data) => {\n\t\tdispatch(setDeleteModal({\n\t\t\tdeleteApi: `country/delete/${data.id}`\n\t\t}));\n\t};\n\n\t/**\n\t * Change the page on table and update the state.\n\t * Fetch data by dispatching callApi.\n\t */\n\tconst onPageChange = (pageNo) => {\n\t\tsetPage(pageNo);\n\t\tdispatch(callApi({\n\t\t\toperationId: `country/list?page=${page}&size=${size}`,\n\t\t\toutput: 'country'\n\t\t}));\n\t};\n\n\t/**\n\t * Change the page size on table and update the state.\n\t * Fetch data by dispatching callApi.\n\t */\n\tconst onSizeChange = (pageSize) => {\n\t\tsetSize(pageSize);\n\t\tdispatch(callApi({\n\t\t\toperationId: `country/list?page=${page}&size=${size}`,\n\t\t\toutput: 'country'\n\t\t}));\n\t};\n\n\t/**\n\t * Receive the value from search box and update the state.\n\t * Fetch data by dispatching callApi.\n\t */\n\tconst onSearchChange = (query) => {\n\t\tdispatch(callApi({\n\t\t\toperationId: `country/list?page=${page}&size=${size}&search=${query}`,\n\t\t\toutput: 'country'\n\t\t}));\n\t};\n\n\t/**\n\t * Refresh the table data after performing delete operation.\n\t * Fetch data by dispatching callApi.\n\t */\n\tuseEffect(() => {\n\t\tif (type === 'success') {\n\t\t\tdispatch(callApi({\n\t\t\t\toperationId: `country/list?page=${page}&size=${size}`,\n\t\t\t\toutput: 'country'\n\t\t\t}));\n\t\t}\n\t});\n\n\treturn (\n\t\t<DefaultCard className=\"mb-50\" {...cardProps}>\n\t\t\t{loading &&\n\t\t\t<ProgressBar/>\n\t\t\t}\n\t\t\t<BasicTable {...tableProps}\n\t\t\t            onSizeChange={(pageSize) => onSizeChange(pageSize)}\n\t\t\t            onSearchChange={(query) => onSearchChange(query)}\n\t\t\t            onPageChange={(pageNo) => onPageChange(pageNo)}\n\t\t\t>\n\t\t\t\t{data !== undefined &&\n\t\t\t\tdata.map((row, rowIndex) => (\n\t\t\t\t\t<tr key={rowIndex}>\n\t\t\t\t\t\t<td>\n                <span className=\"fw-normal\">\n                  {row.id}\n                </span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n                <span className=\"fw-normal\">\n                  {row.countryName}\n                </span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n                <span className=\"fw-normal\">\n                  {row.countryNameBn}\n                </span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n                <span className=\"fw-normal\">\n                  {row.countryLegacyId ?? 'N/A'}\n                </span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<BasicTableAction\n\t\t\t\t\t\t\t\tonShowClick={() => history.push(`/country/${row.id}`)}\n\t\t\t\t\t\t\t\tonEditClick={() => history.push(`/country/${row.id}/edit`)}\n\t\t\t\t\t\t\t\tonDeleteClick={() => onDeleteClick(row)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t))\n\t\t\t\t}\n\t\t\t</BasicTable>\n\t\t</DefaultCard>\n\t)\n\n};\n\nexport default CountryList;"]},"metadata":{},"sourceType":"module"}